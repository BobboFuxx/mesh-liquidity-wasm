{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "ExecuteMsg",
  "oneOf": [
    {
      "type": "object",
      "required": [
        "MakeSwap"
      ],
      "properties": {
        "MakeSwap": {
          "$ref": "#/definitions/MakeSwapMsg"
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "TakeSwap"
      ],
      "properties": {
        "TakeSwap": {
          "$ref": "#/definitions/TakeSwapMsg"
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "CancelSwap"
      ],
      "properties": {
        "CancelSwap": {
          "$ref": "#/definitions/CancelSwapMsg"
        }
      },
      "additionalProperties": false
    }
  ],
  "definitions": {
    "CancelSwapMsg": {
      "type": "object",
      "required": [
        "create_timestamp",
        "maker_address",
        "order_id",
        "timeout_height",
        "timeout_timestamp"
      ],
      "properties": {
        "create_timestamp": {
          "type": "string"
        },
        "maker_address": {
          "type": "string"
        },
        "order_id": {
          "type": "string"
        },
        "timeout_height": {
          "$ref": "#/definitions/HeightOutput"
        },
        "timeout_timestamp": {
          "type": "string"
        }
      }
    },
    "Coin": {
      "type": "object",
      "required": [
        "amount",
        "denom"
      ],
      "properties": {
        "amount": {
          "$ref": "#/definitions/Uint128"
        },
        "denom": {
          "type": "string"
        }
      }
    },
    "Height": {
      "type": "object",
      "required": [
        "revision_height",
        "revision_number"
      ],
      "properties": {
        "revision_height": {
          "type": "integer",
          "format": "uint64",
          "minimum": 0.0
        },
        "revision_number": {
          "type": "integer",
          "format": "uint64",
          "minimum": 0.0
        }
      }
    },
    "HeightOutput": {
      "type": "object",
      "required": [
        "revision_height",
        "revision_number"
      ],
      "properties": {
        "revision_height": {
          "type": "string"
        },
        "revision_number": {
          "type": "string"
        }
      }
    },
    "MakeSwapMsg": {
      "type": "object",
      "required": [
        "buy_token",
        "create_timestamp",
        "desired_taker",
        "expiration_timestamp",
        "maker_address",
        "maker_receiving_address",
        "sell_token",
        "source_channel",
        "source_port",
        "timeout_height",
        "timeout_timestamp"
      ],
      "properties": {
        "buy_token": {
          "$ref": "#/definitions/Coin"
        },
        "create_timestamp": {
          "type": "integer",
          "format": "int64"
        },
        "desired_taker": {
          "type": "string"
        },
        "expiration_timestamp": {
          "type": "integer",
          "format": "uint64",
          "minimum": 0.0
        },
        "maker_address": {
          "type": "string"
        },
        "maker_receiving_address": {
          "type": "string"
        },
        "sell_token": {
          "$ref": "#/definitions/Coin"
        },
        "source_channel": {
          "type": "string"
        },
        "source_port": {
          "type": "string"
        },
        "timeout_height": {
          "$ref": "#/definitions/Height"
        },
        "timeout_timestamp": {
          "type": "integer",
          "format": "uint64",
          "minimum": 0.0
        }
      }
    },
    "TakeSwapMsg": {
      "type": "object",
      "required": [
        "create_timestamp",
        "order_id",
        "sell_token",
        "taker_address",
        "taker_receiving_address",
        "timeout_height",
        "timeout_timestamp"
      ],
      "properties": {
        "create_timestamp": {
          "type": "integer",
          "format": "int64"
        },
        "order_id": {
          "type": "string"
        },
        "sell_token": {
          "$ref": "#/definitions/Coin"
        },
        "taker_address": {
          "type": "string"
        },
        "taker_receiving_address": {
          "type": "string"
        },
        "timeout_height": {
          "$ref": "#/definitions/Height"
        },
        "timeout_timestamp": {
          "type": "integer",
          "format": "uint64",
          "minimum": 0.0
        }
      }
    },
    "Uint128": {
      "description": "A thin wrapper around u128 that is using strings for JSON encoding/decoding, such that the full u128 range can be used for clients that convert JSON numbers to floats, like JavaScript and jq.\n\n# Examples\n\nUse `from` to create instances of this and `u128` to get the value out:\n\n``` # use cosmwasm_std::Uint128; let a = Uint128::from(123u128); assert_eq!(a.u128(), 123);\n\nlet b = Uint128::from(42u64); assert_eq!(b.u128(), 42);\n\nlet c = Uint128::from(70u32); assert_eq!(c.u128(), 70); ```",
      "type": "string"
    }
  }
}
